# This is a sample configuration file for ofono binder driver
#
# This file is expected to be installed in /etc/ofono
#
# The convention is that the keys which can only appear in the [Settings]
# section start with the upper case, those which may appear in the [slotX]
# i.e. slot specific section start with lower case.
#
# Slot specific settings may also appear in the [Settings] section in which
# case they apply to all modems. The exceptions are "path" and "slot" values
# which must be unique and therefore must appear in the section(s) for the
# respective slot(s).
#
# By default, the list of slots is fetched from hwservicemanager managing
# services at /dev/hwbinder
#

[Settings]

#
# Binder device to talk to.
#
# Default /dev/hwbinder
#
#Device=/dev/hwbinder

# User and group for the ofono process. RIL clients are typically
# expected to run under radio:radio.
#
# Default radio:radio
#
#Identity=radio:radio

# If the phone has more than one SIM slot, the 3G/LTE module may be
# shared by all modems, meaning that only one of the slots can use
# 3G/LTE. In order to "hand 4G over" to the other slot, the modem
# currently using 3G/LTE has to drop to GSM, release 3G/LTE module
# and only then 3G/LTE can be used by the other modem. This setting
# allows to disable this behaviour (say, if your phone has independent
# 3G/LTE modules for each slot or you don't need 4G for both slots).
# Obviously, it only has any effect if you have more than one SIM.
#
# Defaults to true (switch the current data modem to 2G when changing
# the data modems)
#
#3GLTEHandover=true

# If this option is set, preferred technology is limited for non-data
# slots. If set to none, preferred technology doesn't depend on whether
# the slot is selected for data or not.
#
# Possible values are none, gsm and umts
#
# Default umts
#
#MaxNonDataMode=umts

# RIL_REQUEST_SET_RADIO_CAPABILITY may or may not be supported by your RIL.
# This option allows you to forcibly enable or disable use of this request.
# It's involved in 3G/LTE handover between the modems, meaning that it only
# makes sense if you have more than one slot.
#
# Possible values are auto, on and off
#
# Default auto (enable if supported)
#
#SetRadioCapability=auto

# Comma-separated list of slots to expect. These slots are added to the
# list the slots reported by hwservicemanager. Duplicates are ignored, i.e.
# the same slot doesn't get added twice.
#
# It's recommended that this list is specified, otherwise ofono may start
# before the modem adaptation and miss some or even all slots.
#
# Default empty
#
#ExpectSlots=

# Comma-separated list of slots to ignore. Glob-style patterns are supported.
# Doesn't apply to the expected slots defined by ExpectSlots
#
# Default empty
#
#IgnoreSlots=

#
# SLOT SPECIFIC ENTRIES
#
# Config groups are named after the slots, e.g.
#
# [slot1]

# Radio interface version. At the time of this writing, versions 1.0
# to 1.5 were supported.
#
# Default 1.2 (android.hardware.radio@1.2::IRadio)
#
#radioInterface = 1.2

# Specifies the extension plugin to use. The plugin must be properly
# installed and registered at startup with libofonobinderpluginext by
# calling binder_ext_plugin_register()
#
# Default none
#
#extPlugin=

# Since IRadio API doesn't provide a standard way of querying the number
# of remaining pin retries, some implementations (namely Qualcomm) allow
# to query the retry count by sending the empty pin. If your implementation
# actually does check the empty pin (and decrements the retry count) then
# you should turn this feature off.
#
# Default true
#
#emptyPinQuery=true

# setDataAllowed request may or may not be supported by your modem.
# This option allows you to disable use of this request.
# Possible values are on and off
#
# Default on
#
#allowDataReq=on

# Enables use of setDataProfile requests.
#
# Default true
#
#useDataProfiles=true

# Configures default data profile ID.
#
# Default 0 (RADIO_DATA_PROFILE_DEFAULT)
#
#defaultDataProfileId=0

# Configures MMS data profile ID.
#
# Default 0 (RADIO_DATA_PROFILE_DEFAULT)
#
#mmsDataProfileId=0

# Comma-separated signal strength range, in dBm.
#
# These values are used for translating dBm values returned by the modem in
# LTE mode into signal strength percentage. If you are getting significantly
# different signal strength readings in GSM and LTE modes, you may need to
# tweak those.
#
# Default -100,-60
#
#signalStrengthRange=-100,-60

# If getAvailableNetworks API is unsupported or for whatever reason
# doesn't work, startNetworkScan can also be used to get the list of
# available networks. Network scan API provides even more information
# about radio technologies supported by the available operators but
# it's only usable with IRadio interface version >= 1.2 and doesn't
# seem to work on some devices
#
# Default false (try getAvailableNetworks first)
#
#useNetworkScan=false

# With some modems, network scan returns strange operator names, i.e.
# numeric MCC+MNC values or the same name for all operators (which is
# actually SPN fetched from the SIM). Such strange names can be replaced
# with operator names from MBPI database, based on the operator's MCC and
# MNC. That may not be 100% accurate, though.
#
# Default false (i.e. trust the modem to report the actual names)
#
#replaceStrangeOperatorNames=false

# Configures device state tracking (basically, power saving strategy).
# Possible values are:
#
#   ds = sendDeviceState mechanism
#   if = setIndicationFilter mechanism
#   all = All of the above
#   none = Disable device state management
#
# Note that one can specify a combination of methods, e.g. ds+if
#
# Default all
#
#deviceStateTracking=all

# Comma-separated list of features to disable. The following values are
# allowed: cbs, data, netreg, pb, rat, auth, sms, stk, ussd, voice, ims,
# all.
#
# Default none (all supported features are enabled)
#
#disableFeatures=

# LTE network mode.
#
# Default 9 (LTE_GSM_WCDMA)
#
#lteNetworkMode=9

# UMTS network mode.
#
# Default 3 (GSM_WCDMA_AUTO)
#
#umtsNetworkMode=3

# Ignore APN errors
#
# APN attachment may fail with some specific errors.
# If you want to ignore those errors to prevent power drain, add error codes here.
#
# ignoreApnErrors=501
